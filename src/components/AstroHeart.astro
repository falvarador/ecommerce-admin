---
interface Props {
  start?: number;
}

const { start = 0 } = Astro.props;
---

<astro-heart data-start={start}>
  <button class="btn btn-primary" aria-label="Heart"
    >ðŸ’œ Ã— <span>{start}</span></button
  >
</astro-heart>

<script>
  class AstroHeart extends HTMLElement {
    count: number;
    button: HTMLButtonElement;
    span: HTMLSpanElement;

    constructor() {
      super();

      this.count = 0;
      this.button = this.querySelector<HTMLButtonElement>("button")!;
      this.span = this.querySelector<HTMLSpanElement>("span")!;

      const start = this.getAttribute("data-start");
      if (start) this.count = parseInt(start) || 0;
    }

    connectedCallback() {
      this.button.addEventListener("click", this);
    }

    disconnectedCallback() {
      this.button.removeEventListener("click", this);
    }

    handleEvent(event: Event) {
      if (event.type === "click") this.handleClick();
    }

    handleClick() {
      this.count++;
      this.span.textContent = this.count.toString();
    }
  }

  customElements.define("astro-heart", AstroHeart);
</script>
